spring:
  datasource:
    url: jdbc:mysql://localhost:3306/bus_app
    username: root
    password: 1234
    driver-class-name:  com.mysql.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 274263461230-alcc6i9jd9ra1d00cs2p9dl8d5empo83.apps.googleusercontent.com
            clientSecret: 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
            scope:
              - email
              - profile
          naver:
            clientId: _xWM4qeMBr2FzNdGdWaQ
            clientSecret: XQ1t4NLRLt
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - nickname
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: 838da266bfdeb74b42a44cf100837412
            clientSecret: aY0Jblok0rMQIMLadPXnX1jRrbbuRK0h
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

logging:
  level:
    org.hibernate.SQL: debug



